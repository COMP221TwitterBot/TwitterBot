{
  "name": "TwitterBot",
  "tagline": "",
  "body": "# TwitterBot - COMP 221 Algorithm Design/Analysis\r\n## Team Members: Ayoub Belemlih, Connor Boyle, Andrew Cui\r\n\r\n### Useful Resources\r\n\r\n* Codecademy Twitter API intro: [https://www.codecademy.com/en/tracks/twitter](https://www.codecademy.com/en/tracks/twitter). Good introduction using Ruby.\r\n\r\n* Tweepy: The python package we can use to retrieve tweets. The documentation has tips to install the package (using pip on your terminal) and basic code samples. [http://docs.tweepy.org/en/v3.5.0/](http://docs.tweepy.org/en/v3.5.0/)\r\n\r\n* Use Tweepy to retrieve tweets from a specific account - Quora answer: [https://www.quora.com/How-can-I-retrieve-from-given-users-home_timeline-with-Tweepy](https://www.quora.com/How-can-I-retrieve-from-given-users-home_timeline-with-Tweepy)\r\n\r\n### Approach\r\n\r\n* We enter tweets into a Markov Chain, a weighted graph where each node represents a gram, each edge represents immediate succession between grams, and weight of the edge represents probability of that succession. \r\n\r\n* User can choose gram size, i.e. how many words are in a \"cluster\". Monogram or 2-gram generally yields to better results. \r\n\r\n* We generate tweets based on Markov Chain by randomly choosing nodes and edges. Since edges are weighted, those with higher weights are more likely to be chosen. \r\n\r\n\r\n\r\n\r\nLast Updated: 12/13/2016",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}